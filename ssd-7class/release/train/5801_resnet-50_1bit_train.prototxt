name: "GTI-ResNet-50"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_value: 104.0
    mean_value: 117.0
    mean_value: 123.0
  }
  data_param {
    source: "path_to_lmdb"
    batch_size: 32 
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_value: 104.0
    mean_value: 117.0
    mean_value: 123.0
  }
  data_param {
    source: "path_to_lmdb"
    batch_size: 10
    backend: LMDB
  }
}
layer {
  name: "conv1a"
  type: "QuantConvolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn_conv1a"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale_conv1a"
  type: "Scale"
  bottom: "conv1a"
  top: "conv1a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1a_relu"
  type: "QuantReLU"
  bottom: "conv1a"
  top: "conv1a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "conv1b"
  type: "QuantConvolution"
  bottom: "conv1a"
  top: "conv1b"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn_conv1b"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale_conv1b"
  type: "Scale"
  bottom: "conv1b"
  top: "conv1b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1b_relu"
  type: "QuantReLU"
  bottom: "conv1b"
  top: "conv1b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv1b"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "QuantConvolution"
  bottom: "pool0"
  top: "conv2a"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn_conv2a"
  type: "BatchNorm"
  bottom: "conv2a"
  top: "conv2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale_conv2a"
  type: "Scale"
  bottom: "conv2a"
  top: "conv2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2a_relu"
  type: "QuantReLU"
  bottom: "conv2a"
  top: "conv2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "conv2b"
  type: "QuantConvolution"
  bottom: "conv2a"
  top: "conv2b"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn_conv2b"
  type: "BatchNorm"
  bottom: "conv2b"
  top: "conv2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale_conv2b"
  type: "Scale"
  bottom: "conv2b"
  top: "conv2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2b_relu"
  type: "QuantReLU"
  bottom: "conv2b"
  top: "conv2b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv2b"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "QuantConvolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2a_branch2a"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2a_branch2a"
  type: "Scale"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a_relu"
  type: "QuantReLU"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res2a_branch2b"
  type: "QuantConvolution"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2a_branch2b"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2a_branch2b"
  type: "Scale"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a"
  type: "Eltwise"
  bottom: "pool1"
  bottom: "res2a_branch2b"
  top: "res2a"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2a_relu"
  type: "QuantReLU"
  bottom: "res2a"
  top: "res2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res2b_branch2a"
  type: "QuantConvolution"
  bottom: "res2a"
  top: "res2b_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2b_branch2a"
  type: "BatchNorm"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2b_branch2a"
  type: "Scale"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2a_relu"
  type: "QuantReLU"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res2b_branch2b"
  type: "QuantConvolution"
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2b_branch2b"
  type: "BatchNorm"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2b_branch2b"
  type: "Scale"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b"
  type: "Eltwise"
  bottom: "res2a"
  bottom: "res2b_branch2b"
  top: "res2b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2b_relu"
  type: "QuantReLU"
  bottom: "res2b"
  top: "res2b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res2c_branch2a"
  type: "QuantConvolution"
  bottom: "res2b"
  top: "res2c_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2c_branch2a"
  type: "BatchNorm"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2c_branch2a"
  type: "Scale"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2a_relu"
  type: "QuantReLU"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res2c_branch2b"
  type: "QuantConvolution"
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn2c_branch2b"
  type: "BatchNorm"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale2c_branch2b"
  type: "Scale"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c"
  type: "Eltwise"
  bottom: "res2b"
  bottom: "res2c_branch2b"
  top: "res2c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2c_relu"
  type: "QuantReLU"
  bottom: "res2c"
  top: "res2c"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2c"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "QuantConvolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3a_branch2a"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3a_branch2a"
  type: "Scale"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a_relu"
  type: "QuantReLU"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3a_branch2b"
  type: "QuantConvolution"
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3a_branch2b"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3a_branch2b"
  type: "Scale"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_relu"
  type: "QuantReLU"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3b_branch2a"
  type: "QuantConvolution"
  bottom: "res3a_branch2b"
  top: "res3b_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3b_branch2a"
  type: "BatchNorm"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3b_branch2a"
  type: "Scale"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2a_relu"
  type: "QuantReLU"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3b_branch2b"
  type: "QuantConvolution"
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3b_branch2b"
  type: "BatchNorm"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3b_branch2b"
  type: "Scale"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b"
  type: "Eltwise"
  bottom: "res3a_branch2b"
  bottom: "res3b_branch2b"
  top: "res3b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3b_relu"
  type: "QuantReLU"
  bottom: "res3b"
  top: "res3b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3c_branch2a"
  type: "QuantConvolution"
  bottom: "res3b"
  top: "res3c_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3c_branch2a"
  type: "BatchNorm"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3c_branch2a"
  type: "Scale"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2a_relu"
  type: "QuantReLU"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3c_branch2b"
  type: "QuantConvolution"
  bottom: "res3c_branch2a"
  top: "res3c_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3c_branch2b"
  type: "BatchNorm"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3c_branch2b"
  type: "Scale"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c"
  type: "Eltwise"
  bottom: "res3b"
  bottom: "res3c_branch2b"
  top: "res3c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3c_relu"
  type: "QuantReLU"
  bottom: "res3c"
  top: "res3c"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3d_branch2a"
  type: "QuantConvolution"
  bottom: "res3c"
  top: "res3d_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3d_branch2a"
  type: "BatchNorm"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3d_branch2a"
  type: "Scale"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2a_relu"
  type: "QuantReLU"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res3d_branch2b"
  type: "QuantConvolution"
  bottom: "res3d_branch2a"
  top: "res3d_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn3d_branch2b"
  type: "BatchNorm"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale3d_branch2b"
  type: "Scale"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d"
  type: "Eltwise"
  bottom: "res3c"
  bottom: "res3d_branch2b"
  top: "res3d"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3d_relu"
  type: "QuantReLU"
  bottom: "res3d"
  top: "res3d"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3d"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "QuantConvolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4a_branch2a"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4a_branch2a"
  type: "Scale"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4a_branch2b"
  type: "QuantConvolution"
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4a_branch2b"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4a_branch2b"
  type: "Scale"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_relu"
  type: "QuantReLU"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4b_branch2a"
  type: "QuantConvolution"
  bottom: "res4a_branch2b"
  top: "res4b_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4b_branch2a"
  type: "BatchNorm"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4b_branch2a"
  type: "Scale"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4b_branch2b"
  type: "QuantConvolution"
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4b_branch2b"
  type: "BatchNorm"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4b_branch2b"
  type: "Scale"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b"
  type: "Eltwise"
  bottom: "res4a_branch2b"
  bottom: "res4b_branch2b"
  top: "res4b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4b_relu"
  type: "QuantReLU"
  bottom: "res4b"
  top: "res4b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4c_branch2a"
  type: "QuantConvolution"
  bottom: "res4b"
  top: "res4c_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4c_branch2a"
  type: "BatchNorm"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4c_branch2a"
  type: "Scale"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4c_branch2b"
  type: "QuantConvolution"
  bottom: "res4c_branch2a"
  top: "res4c_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4c_branch2b"
  type: "BatchNorm"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4c_branch2b"
  type: "Scale"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c"
  type: "Eltwise"
  bottom: "res4b"
  bottom: "res4c_branch2b"
  top: "res4c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4c_relu"
  type: "QuantReLU"
  bottom: "res4c"
  top: "res4c"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4d_branch2a"
  type: "QuantConvolution"
  bottom: "res4c"
  top: "res4d_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4d_branch2a"
  type: "BatchNorm"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4d_branch2a"
  type: "Scale"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4d_branch2b"
  type: "QuantConvolution"
  bottom: "res4d_branch2a"
  top: "res4d_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4d_branch2b"
  type: "BatchNorm"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4d_branch2b"
  type: "Scale"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d"
  type: "Eltwise"
  bottom: "res4c"
  bottom: "res4d_branch2b"
  top: "res4d"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4d_relu"
  type: "QuantReLU"
  bottom: "res4d"
  top: "res4d"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4e_branch2a"
  type: "QuantConvolution"
  bottom: "res4d"
  top: "res4e_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4e_branch2a"
  type: "BatchNorm"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4e_branch2a"
  type: "Scale"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4e_branch2b"
  type: "QuantConvolution"
  bottom: "res4e_branch2a"
  top: "res4e_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4e_branch2b"
  type: "BatchNorm"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4e_branch2b"
  type: "Scale"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e"
  type: "Eltwise"
  bottom: "res4d"
  bottom: "res4e_branch2b"
  top: "res4e"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4e_relu"
  type: "QuantReLU"
  bottom: "res4e"
  top: "res4e"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4f_branch2a"
  type: "QuantConvolution"
  bottom: "res4e"
  top: "res4f_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4f_branch2a"
  type: "BatchNorm"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4f_branch2a"
  type: "Scale"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4f_branch2b"
  type: "QuantConvolution"
  bottom: "res4f_branch2a"
  top: "res4f_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4f_branch2b"
  type: "BatchNorm"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4f_branch2b"
  type: "Scale"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f"
  type: "Eltwise"
  bottom: "res4e"
  bottom: "res4f_branch2b"
  top: "res4f"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4f_relu"
  type: "QuantReLU"
  bottom: "res4f"
  top: "res4f"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4g_branch2a"
  type: "QuantConvolution"
  bottom: "res4f"
  top: "res4g_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4g_branch2a"
  type: "BatchNorm"
  bottom: "res4g_branch2a"
  top: "res4g_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4g_branch2a"
  type: "Scale"
  bottom: "res4g_branch2a"
  top: "res4g_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4g_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4g_branch2a"
  top: "res4g_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4g_branch2b"
  type: "QuantConvolution"
  bottom: "res4g_branch2a"
  top: "res4g_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4g_branch2b"
  type: "BatchNorm"
  bottom: "res4g_branch2b"
  top: "res4g_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4g_branch2b"
  type: "Scale"
  bottom: "res4g_branch2b"
  top: "res4g_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4g"
  type: "Eltwise"
  bottom: "res4f"
  bottom: "res4g_branch2b"
  top: "res4g"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4g_relu"
  type: "QuantReLU"
  bottom: "res4g"
  top: "res4g"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4h_branch2a"
  type: "QuantConvolution"
  bottom: "res4g"
  top: "res4h_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4h_branch2a"
  type: "BatchNorm"
  bottom: "res4h_branch2a"
  top: "res4h_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4h_branch2a"
  type: "Scale"
  bottom: "res4h_branch2a"
  top: "res4h_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4h_branch2a_relu"
  type: "QuantReLU"
  bottom: "res4h_branch2a"
  top: "res4h_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res4h_branch2b"
  type: "QuantConvolution"
  bottom: "res4h_branch2a"
  top: "res4h_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn4h_branch2b"
  type: "BatchNorm"
  bottom: "res4h_branch2b"
  top: "res4h_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale4h_branch2b"
  type: "Scale"
  bottom: "res4h_branch2b"
  top: "res4h_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4h"
  type: "Eltwise"
  bottom: "res4g"
  bottom: "res4h_branch2b"
  top: "res4h"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4h_relu"
  type: "QuantReLU"
  bottom: "res4h"
  top: "res4h"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5a_branch2a"
  type: "QuantConvolution"
  bottom: "res4h"
  top: "res5a_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5a_branch2a"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5a_branch2a"
  type: "Scale"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2a_relu"
  type: "QuantReLU"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5a_branch2b"
  type: "QuantConvolution"
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5a_branch2b"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5a_branch2b"
  type: "Scale"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_relu"
  type: "QuantReLU"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5b_branch2a"
  type: "QuantConvolution"
  bottom: "res5a_branch2b"
  top: "res5b_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5b_branch2a"
  type: "BatchNorm"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5b_branch2a"
  type: "Scale"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b_branch2a_relu"
  type: "QuantReLU"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5b_branch2b"
  type: "QuantConvolution"
  bottom: "res5b_branch2a"
  top: "res5b_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5b_branch2b"
  type: "BatchNorm"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5b_branch2b"
  type: "Scale"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b"
  type: "Eltwise"
  bottom: "res5a_branch2b"
  bottom: "res5b_branch2b"
  top: "res5b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5b_relu"
  type: "QuantReLU"
  bottom: "res5b"
  top: "res5b"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5c_branch2a"
  type: "QuantConvolution"
  bottom: "res5b"
  top: "res5c_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5c_branch2a"
  type: "BatchNorm"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5c_branch2a"
  type: "Scale"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c_branch2a_relu"
  type: "QuantReLU"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "res5c_branch2b"
  type: "QuantConvolution"
  bottom: "res5c_branch2a"
  top: "res5c_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 12
    shift_enable: false
  }
}
layer {
  name: "bn5c_branch2b"
  type: "BatchNorm"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  batch_norm_param {
    moving_average_fraction: 0.899999976158
  }
}
layer {
  name: "scale5c_branch2b"
  type: "Scale"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c"
  type: "Eltwise"
  bottom: "res5b"
  bottom: "res5c_branch2b"
  top: "res5c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5c_relu"
  type: "QuantReLU"
  bottom: "res5c"
  top: "res5c"
  param {
    lr_mult: 0.0
  }
  quant_relu_param {
    filler {
      type: "constant"
      value: 0.699999988079
    }
    channel_shared: true
    act_bits: 5
    quant_enable: false
  }
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "res5c"
  top: "pool5"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "fc1000"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc1000"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 1.0
  }
  inner_product_param {
    num_output: 21278 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc1000"
  bottom: "label"
  top: "loss"
}
layer {
  name: "acc/top-1"
  type: "Accuracy"
  bottom: "fc1000"
  bottom: "label"
  top: "acc/top-1"
  include {
    phase: TEST
  }
}
layer {
  name: "acc/top-5"
  type: "Accuracy"
  bottom: "fc1000"
  bottom: "label"
  top: "acc/top-5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}
