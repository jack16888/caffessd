name: "5801_VGG-16_train"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 224
    quant_enable: true
  }
  data_param {
    source: "path_to_lmdb"
    batch_size: 10
    backend: LMDB
  }
} 
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    quant_enable: true
  }
  data_param {
    source: "path_to_lmdb"
    batch_size: 8
    backend: LMDB
  }
}
layer {
  name: "conv1_1"
  type: "QuantConvolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu1_1"
  type: "QuantReLU"
  bottom: "conv1_1"
  top: "conv1_1"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 9.72}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv1_2"
  type: "QuantConvolution"
  bottom: "conv1_1"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu1_2"
  type: "QuantReLU"
  bottom: "conv1_2"
  top: "conv1_2"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 6.34}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}  
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "QuantConvolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu2_1"
  type: "QuantReLU"
  bottom: "conv2_1"
  top: "conv2_1"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 6.41}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv2_2"
  type: "QuantConvolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu2_2"
  type: "QuantReLU"
  bottom: "conv2_2"
  top: "conv2_2"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 12.11}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "QuantConvolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu3_1"
  type: "QuantReLU"
  bottom: "conv3_1"
  top: "conv3_1"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 11.35}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv3_2"
  type: "QuantConvolution"
  bottom: "conv3_1"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu3_2"
  type: "QuantReLU"
  bottom: "conv3_2"
  top: "conv3_2"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 12.34}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv3_3"
  type: "QuantConvolution"
  bottom: "conv3_2"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: THREE_BITS
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu3_3"
  type: "QuantReLU"
  bottom: "conv3_3"
  top: "conv3_3"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 13.52}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "QuantConvolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu4_1"
  type: "QuantReLU"
  bottom: "conv4_1"
  top: "conv4_1"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 12.78}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv4_2"
  type: "QuantConvolution"
  bottom: "conv4_1"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu4_2"
  type: "QuantReLU"
  bottom: "conv4_2"
  top: "conv4_2"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 12.75}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv4_3"
  type: "QuantConvolution"
  bottom: "conv4_2"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu4_3"
  type: "QuantReLU"
  bottom: "conv4_3"
  top: "conv4_3"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 13.41}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "QuantConvolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
 quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu5_1"
  type: "QuantReLU"
  bottom: "conv5_1"
  top: "conv5_1"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 13.20}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv5_2"
  type: "QuantConvolution"
  bottom: "conv5_1"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu5_2"
  type: "QuantReLU"
  bottom: "conv5_2"
  top: "conv5_2"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 12.95}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "conv5_3"
  type: "QuantConvolution"
  bottom: "conv5_2"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
 quant_convolution_param {
    coef_precision: ONE_BIT
    bw_params: 8
    shift_enable: false
  }
}
layer {
  name: "relu5_3"
  type: "QuantReLU"
  bottom: "conv5_3"
  top: "conv5_3"
  quant_relu_param {
    channel_shared: true
    filler: {type: "constant" value: 13.35}
    act_bits:5
    quant_enable: false
  }
  param {lr_mult: 5}
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc9"
  inner_product_param {
    num_output: 40
  }
}

layer {
    bottom: "fc9"
    bottom: "label"
    name: "loss"
    type: "SoftmaxWithLoss"
    top: "loss"
}

layer {
    bottom: "fc9"
    bottom: "label"
    top: "acc/top-1"
    name: "acc/top-1"
    type: "Accuracy"
    include {
        phase: TEST
    }
}

layer {
    bottom: "fc9"
    bottom: "label"
    top: "acc/top-5"
    name: "acc/top-5"
    type: "Accuracy"
    include {
        phase: TEST
    }
    accuracy_param {
        top_k: 5
    }
}
